// ======================================================
// Fichier : api.js
// Description : Gestion des requ√™tes API pour les projets et cat√©gories
// Auteur : SIMON Fanny
// Date : 2025-08-21
// ======================================================

import { API_URL } from "./config.js";
import { getToken } from "./authApi.js";

// ----------------- R√©cup√©ration des projets depuis l'API -----------------

export async function fetchWorks() {
  const response = await fetch(`${API_URL}/works`);
  if (!response.ok) {
    switch (response.status) {
      case 401:
        throw new Error("Erreur 401 : Non autoris√©. V√©rifiez le token.");
      case 404:
        throw new Error("Erreur 404 : Ressource non trouv√©e.");
      case 500:
        throw new Error("Erreur 500 : Erreur serveur. R√©essayez plus tard.");
      default:
        throw new Error("Erreur HTTP : " + response.status);
    }
  }
  const data = await response.json();
  console.log("Projets r√©cup√©r√©s :", data);
  return data;
}

// Ajouter un projet
export async function addWork(formData) {
  const token = getToken();
  console.log("üîë Token r√©cup√©r√©:", token ? "Token trouv√©" : "Aucun token");
  console.log("üîë Token complet:", token);

  if (!token) throw new Error("Utilisateur non authentifi√©");

  // V√©rifier l'expiration du token
  try {
    const payload = JSON.parse(atob(token.split(".")[1]));
    const expirationDate = new Date(payload.exp * 1000);
    const now = new Date();
    console.log("‚è∞ Token expir√©:", now > expirationDate);

    if (now > expirationDate) {
      throw new Error("Token expir√©");
    }
  } catch (error) {
    console.error("‚ùå Erreur d√©codage token:", error);
  }

  const response = await fetch(`${API_URL}/works`, {
    method: "POST",
    headers: { Authorization: `Bearer ${token}` },
    body: formData, // FormData contient { image, title, category }
  });

  if (!response.ok) {
    throw new Error("Erreur lors de l‚Äôajout du projet");
  }

  return response.json();
}

// Supprimer un projet
export async function deleteWork(workId) {
  const token = getToken();
  if (!token) throw new Error("Utilisateur non authentifi√©");

  const response = await fetch(`${API_URL}/works/${workId}`, {
    method: "DELETE",
    headers: { Authorization: `Bearer ${token}` },
  });

  if (!response.ok) {
    throw new Error("Erreur lors de la suppression du projet");
  }

  return true; // suppression r√©ussie
}

// ----------------- Cat√©gories -----------------

// R√©cup√©rer les cat√©gories
export async function fetchCategories() {
  const response = await fetch(`${API_URL}/categories`);
  if (!response.ok) {
    throw new Error("Erreur lors du chargement des cat√©gories");
  }
  const data = await response.json();
  console.log("Cat√©gories r√©cup√©r√©es :", data);
  return data;
}
